pipeline {
    agent {
        docker {
            image 'mattermost/mattermost-marketplace-build:sep-11-2019'
        }
    }

    /* environment { */
    /*     AWS_ACCESS_KEY_ID = credentials('AWS_ACCESS_KEY_ID') */
    /*     AWS_SECRET_ACCESS_KEY = credentials('AWS_SECRET_ACCESS_KEY') */
    /* } */

    stages {
        stage('Dev Test') {
            steps {
                sh '''
                    pwd
                    ls -la
                    serverless deploy --stage test
                    serverless invoke --stage test --function server --data '{"PathParameters":{"proxy":"/api/v1/plugins"}, "httpMethod": "GET"}'
                '''
            }
        }

        /* stage('Staging') { */
        /*     when { expression { */
        /*         env.BRANCH_NAME == 'staging' */	
        /*     } } */

        /*     steps { */	
        /*         withDockerContainer(args: '', image: 'mattermost/mattermost-marketplace-build:sep-11-2019') { */
        /*             sh ''' */
        /*                 serverless deploy --stage staging --region us-east-1' */
        /*                 serverless invoke --stage staging --function server --data '{"PathParameters":{"proxy":"/api/v1/plugins"}, "httpMethod": "GET"}' */
        /*             ''' */
        /*         } */
        /*     } */
        /* } */

        /* stage('Production') { */
        /*     when { expression { */
        /*         env.BRANCH_NAME == 'production' */	
        /*     } } */

        /*     steps { */	
        /*         withDockerContainer(args: '', image: 'mattermost/mattermost-marketplace-build:sep-11-2019') { */
        /*             sh ''' */
        /*                 serverless deploy --stage production --region us-east-1' */
        /*                 serverless invoke --stage production --function server --data '{"PathParameters":{"proxy":"/api/v1/plugins"}, "httpMethod": "GET"}' */
        /*             ''' */
        /*         } */
        /*     } */
        /* } */

	stage('Teardown') {
	    steps {
                sh '''
                    serverless remove --stage test
                '''
            }
	}
    }
}
